<?php
/**
 * @author Rubén Bitrián Crespo <rbitriantrabajo@gmail.com>
 */

namespace App\Repository;

use App\Entity\Ficha;
use App\Entity\Jugador;
use App\Entity\Partida;
use Doctrine\ORM\EntityRepository;

/**
 * PartidaRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PartidaRepository extends EntityRepository {

    /**
     * Obtenemos cuál es el siguiente jugador en poner ficha.
     *
     * @param Partida $partida
     *
     * @return Jugador
     */
    public function getSiguienteJugadorTurno(Partida $partida) {
        $tablero = $partida->getTablero();
        $numFichas = count($tablero->getFichas());

        $sigJugadorTurno = null;

        if(!$partida->getFinalizada()) {
            if($numFichas === 0 || ($numFichas % 2) === 0) {
                $sigJugadorTurno = $partida->getJugador1();
            } else {
                $sigJugadorTurno = $partida->getJugador2();
            }
        }

        return $sigJugadorTurno;
    }

    /**
     * Averiguamos si hay un ganador en la partida recorriendo el tablero por filas, columnas y diagonales.
     *
     * @param Partida $partida
     * @param   [][] $arrayFichas
     *
     * @return Jugador || null
     */
    public function obtenerGanador(Partida $partida, $arrayFichas) {
        $tablero = $partida->getTablero();
        $filasTablero = $tablero->getNumFilas();
        $columnasTablero = $tablero->getNumColumnas();

        $jugadorGanador = null;

        $rayaDiagonalSuperior = $rayaDiagonalInferior = false;

        //Comprobamos primero las filas
        for($i = 0; $i < $filasTablero; $i++) { //Recorremos el tablero por filas
            //la primera ficha, en caso de raya, nos dirá los datos de las demás
            /* @var Ficha $fichaAux nos apoyamos en una variable auxiliar */
            $fichaAux = $arrayFichas[$i][0];

            if($fichaAux) { //Comprobamos en el resto si hay alguna ficha puesta y si no se ha encontrado 3 en raya aún
                $rayaFilas = true;
                $tipoFichaAux = ($fichaAux) ? $fichaAux->getTipo()->getSimbolo() : null;

                //Si hay 3 en raya, establecemos el jugador ganador
                $jugadorGanador = $fichaAux->getJugador();

                for($j = 1; $j < $columnasTablero; $j++) { //Recorremos el resto de casillas de cada fila del tablero
                    /* @var Ficha $ficha */
                    $ficha = $arrayFichas[$i][$j];
                    $tipoFicha = ($ficha) ? $ficha->getTipo()->getSimbolo() : null;

                    if($tipoFichaAux !== $tipoFicha) { //Comprobamos si la fila está completa
                        //si las dos fichas adyacentes no coinciden
                        $rayaFilas = false;
                        //pasamos a la siguiente fila
                        break;
                    }
                }

                //Si al acabar de recorrer la fila $i hay 3 en raya, no es necesario comprobar el resto de filas
                if($rayaFilas) {
                    return $jugadorGanador;
                }
            }
        }

        //Comprobación por columnas
        for($j = 0; $j < $columnasTablero; $j++) { //Recorremos el tablero por columnas
            //la primera ficha, en caso de raya, nos dirá los datos de las demás
            /* @var Ficha $fichaAux nos apoyamos en una variable auxiliar */
            $fichaAux = $arrayFichas[0][$j];

            if($fichaAux) { //Comprobamos en el resto si hay alguna ficha puesta y si no se ha encontrado 3 en raya aún
                $rayaColumnas = true;

                $tipoFichaAux = ($fichaAux) ? $fichaAux->getTipo()->getSimbolo() : null;
                //Si hay 3 en raya, establecemos el jugador ganador
                $jugadorGanador = $fichaAux->getJugador();

                for($i = 1; $i < $filasTablero; $i++) { //Recorremos el resto de casillas de cada columna del tablero
                    /* @var Ficha $ficha */
                    $ficha = $arrayFichas[$i][$j];
                    $tipoFicha = ($ficha) ? $ficha->getTipo()->getSimbolo() : null;

                    if($tipoFichaAux !== $tipoFicha) { //Comprobamos si la columna está completa
                        //si las dos fichas adyacentes no coinciden
                        $rayaColumnas = false;
                        //pasamos a la siguiente columna
                        break;
                    }
                }

                //Si al acabar de recorrer la columna $j hay 3 en raya, no es necesario comprobar el resto de columnas
                if($rayaColumnas) {
                    return $jugadorGanador;
                }
            }
        }

        //Diagonal superior
        //La primera ficha, en caso de raya, nos dirá los datos de las demás
        /* @var Ficha $fichaAux */
        $fichaAux = $arrayFichas[0][0];

        if($fichaAux) { //Si hay ficha puesta al inicio de la diagonal, comprobamos el resto
            $rayaDiagonalSuperior = true;

            $tipoFichaAux = ($fichaAux) ? $fichaAux->getTipo()->getSimbolo() : null;
            //Posible Jugador ganador
            $jugadorGanador = $fichaAux->getJugador();

            for($i = $j = 1; $i < $columnasTablero; $i++) { //Recorremos la diagonal desde arriba hacia abajo
                /* @var Ficha $ficha */
                $ficha = $arrayFichas[$i][$j];
                $tipoFicha = ($ficha) ? $ficha->getTipo()->getSimbolo() : null;

                if($tipoFichaAux !== $tipoFicha) { //Comprobamos si la fila está completa
                    // si las dos fichas adyacentes no coinciden
                    $rayaDiagonalSuperior = false;
                    //pasamos a la siguiente fila
                    break;
                }

                $j++;
            }
        }

        if($rayaDiagonalSuperior) {
            return $jugadorGanador;
        }

        //Diagonal inferior
        //La primera ficha, en caso de raya, nos dirá los datos de las demás
        $i = $filasTablero - 1;
        /* @var Ficha $fichaAux */
        $fichaAux = $arrayFichas[$i][0];

        if($fichaAux) { //Si hay ficha puesta al inicio de la diagonal, comprobamos el resto
            $rayaDiagonalInferior = true;

            $tipoFichaAux = ($fichaAux) ? $fichaAux->getTipo()->getSimbolo() : null;
            //Posible Jugador ganador
            $jugadorGanador = $fichaAux->getJugador();

            for($j = 1; $j < $columnasTablero; $j++) { //Recorremos la diagonal desde abajo hacia arriba
                $i--;
                /* @var Ficha $ficha */
                $ficha = $arrayFichas[$i][$j];
                $tipoFicha = ($ficha) ? $ficha->getTipo()->getSimbolo() : null;

                if($tipoFichaAux !== $tipoFicha) { //Controlamos que la fila esté completa
                    //Las dos fichas contiguas no coinciden
                    $rayaDiagonalInferior = false;
                    //Pasamos a la siguiente fila
                    break;
                }
            }
        }

        if($rayaDiagonalInferior) {
            return $jugadorGanador;
        }
    }

}
